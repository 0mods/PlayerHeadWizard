plugins {
    id 'com.github.johnrengelman.shadow'
}

loom {
    forge {
        mixinConfig "playerwizard.mixins.json"
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    forge "net.minecraftforge:forge:$rootProject.forge_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}

unifiedPublishing {
    project {
        displayName = "Forge [${rootProject.supported_versions}] ${rootProject.mod_publish_name}"
        gameVersions = [rootProject.minecraft_version]
        gameLoaders = ["forge"]
        mainPublication tasks.remapJar

        def builder = new StringBuilder()

        if ((rootProject.file("changelog") as File).exists()) {
            rootProject.file("changelog").readLines().forEach { a ->
                builder.append(a).append("\n")
            }
        } else {
            builder.append("")
        }

        changelog = builder.toString()

        def file = rootProject.file("token.data") as File

        def t = file.exists() ? rootProject.file("token.data").readLines() : new ArrayList<String>()

        var cfToken = !t.isEmpty() ? t.get(0) : ""

        if (!cfToken.isEmpty()) {
            curseforge {
                token = cfToken
                id = "1087714"
            }
        }
        var mrToken = !t.isEmpty() ? t.get(1) : ""
        if (!mrToken.isEmpty()) {
            modrinth {
                token = mrToken
                id = "Vwq7vMlk"
            }
        }
    }
}
